server.port=80
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#日志配置
logging.level.root=DEBUG
logging.level.org.springframework=DEBUG

spring.datasource.url=jdbc:mysql://localhost:3306/kai_socialconn?characterEncoding=utf8mb4&serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
#隔离级别数字配置的含义：#-1 数据库默认隔离级别#1  未提交读#2  读写提交#4  可重复读#8  串行化
#tomcat数据源默认隔离级别spring.datasource.tomcat.default-transaction-isolation=2
#dbcp2数据库连接池默认隔离级别#spring.datasource.dbcp2.default-transaction-isolation=2
##Tomcat JNDI数据源
##spring.datasource.driver-class-name=com.mysql.jdbc.Driver
##最大等待连接中的数量, 设 0 为没有限制
#spring.datasource.tomcat.max-idle=10
##最大连接活动数
#spring.datasource.tomcat.max-active=50
##最大等待毫秒数, 单位为 ms, 超过时间会出错误信息
#spring.datasource.tomcat.max-wait=10000
##数据库连接池初始化连接数
#spring.datasource.tomcat.initial-size=5

##DBCP2数据源
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#指定数据库连接池的类型
spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#最大等待连接中的数量，设 0 为没有限制
spring.datasource.dbcp2.max-idle=10
#最大连接活动数
spring.datasource.dbcp2.max-total=50
#最大等待毫秒数, 单位为 ms, 超过时间会出错误信息
spring.datasource.dbcp2.max-wait-millis=10000
#数据库连接池初始化连接数
spring.datasource.dbcp2.initial-size=5

#MyBatis映射文件通配
mybatis.mapper-locations=classpath:mapper/*.xml
#MyBatis扫描别名包，和注解@Alias联用
mybatis.type-aliases-package=com.kai.socialconn.bean,com.kai.socialconn.pojo
#配置typeHandler的扫描包
mybatis.type-handlers-package=com.kai.socialconn.typeHandler
#日志配置
logging.level.org.org.mybatis=DEBUG
#定义Mapper的XML路径mybatis.mapper-locations=......
#定义别名扫描的包，需要与@Alias联合使用mybatis.type-aliases-package=......
#MyBatis配置文件，当你的配置比较复杂的时候，可以使用它mybatis.config-location=......
#配置MyBaits插件（拦截器）mybatis.configuration.interceptors= ......
#具体类需要与@MappedJdbcTypes联合使用mybatis.type-handlers-package=......
#级联延迟加载属性配置mybatis.configuration.aggressive-lazy-loading=......
#执行器（Executor），可以配置SIMPLE, REUSE, BATCH，默认为SIMPLE : mybatis.executor-type=......

#Jedis
#配置连接池属性
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000
#配置Redis服务器属性
spring.redis.port=6379
spring.redis.host=47.107.127.196
spring.redis.password=KavyPeng12345
#Redis连接超时时间，单位毫秒
spring.redis.timeout=1000

# SPRING CACHE (CacheProperties)
# spring.cache.cache-names= # 如果由底层的缓存管理器支持创建，以逗号分隔的列表来缓存名称
# spring.cache.caffeine.spec= # caffeine缓存配置细节
# spring.cache.couchbase.expiration=0ms # couchbase缓存超时时间，默认是永不超时
# spring.cache.ehcache.config= # 配置ehcache缓存初始化文件路径
# spring.cache.infinispan.config=  #infinispan缓存配置文件
# spring.cache.jcache.config=  #jcache缓存配置文件
# spring.cache.jcache.provider= #jcache缓存提供者配置
# 是否允许Redis缓存空值
spring.cache.redis.cache-null-values=true
# Redis的键前缀
spring.cache.redis.key-prefix=Redis
# 缓存超时时间戳，配置为0则不设置超时时间
spring.cache.redis.time-to-live=600000
# 是否启用Redis的键前缀
spring.cache.redis.use-key-prefix=true
# 缓存类型，在默认的情况下，Spring会自动根据上下文探测
spring.cache.type=REDIS
spring.cache.cache-names=redisCache

## MONGODB (MongoProperties)
## 用于签名的MongoDB数据库
#spring.data.mongodb.authentication-database=
## 数据库名称
#spring.data.mongodb.database=test
## 使用字段名策略
#spring.data.mongodb.field-naming-strategy=
## GridFs（网格文件）数据库名称
#spring.data.mongodb.grid-fs-database=
## MongoDB服务器，不能设置为URI
#spring.data.mongodb.host=localhost
## MongoDB服务器用户密码，不能设置为URI
#spring.data.mongodb.password=
## MongoDB服务器端口，不能设置为URI
#spring.data.mongodb.port=
## 是否启用MongoDB关于JPA规范的编程
#spring.data.mongodb.repositories.type=auto
## MongoDB默认URI
#spring.data.mongodb.uri=mongodb://localhost/test
## MongoDB服务器用户名，不能设置为URI
#spring.data.mongodb.username=
